server:
  port: 8081
# Spring properties
spring:
  sleuth:
    enabled: true
    sampler:
      probability: 1.0
  zipkin:
    enabled: true
    base-url: ${ZIPKIN_HOST:http://localhost:9411/}
    service:
      name: second-service
    sender:
      type: web
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  application:
    name: second-service
  flyway:
    enabled: false
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/assets}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:root}
    driver-class-name: org.postgresql.Driver
  cloud:
    discovery:
      client:
        simple:
          instances:
            first-service:
              - uri: ${FIRST_SERVICE:http://localhost:8080}
# Actuator properties
management:
  endpoint:
    health:
      show-details: ALWAYS
  endpoints:
    web:
      exposure:
        include: '*'
#Logger
logging:
  level:
    root: info